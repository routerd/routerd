
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: dnsservers.dns.routerd.net
spec:
  group: dns.routerd.net
  names:
    kind: DNSServer
    listKind: DNSServerList
    plural: dnsservers
    singular: dnsserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DNSServer is the Schema for the dnsservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DNSServerSpec defines the desired state of DNSServer
            properties:
              cache:
                description: Enables caching of records.
                properties:
                  ttl:
                    default: 3600s
                    description: Each element in the cache is cached according to
                      its TTL (with TTL as the max).
                    type: string
                  zones:
                    description: Zones it should cache for. If empty, the zones from
                      the configuration block are used.
                    items:
                      type: string
                    type: array
                required:
                - ttl
                type: object
              forward:
                description: Configures forwarding queries to other DNS servers.
                properties:
                  except:
                    description: List of domains to exclude from forwarding. Requests
                      that match none of these names will be passed through.
                    items:
                      type: string
                    type: array
                  from:
                    description: From is the base domain to match for the request
                      to be forwarded.
                    type: string
                  policy:
                    default: Random
                    description: "\tpolicy specifies the policy to use for selecting
                      upstream servers."
                    enum:
                    - Random
                    - RoundRobin
                    - Sequential
                    type: string
                  to:
                    description: destination endpoints to forward to. The TO syntax
                      allows you to specify a protocol, tls://9.9.9.9 or dns:// (or
                      no protocol) for plain DNS. The number of upstreams is limited
                      to 15.
                    items:
                      type: string
                    type: array
                required:
                - from
                - policy
                - to
                type: object
              networkAttachment:
                description: NetworkAttachment configures how the DNS Server is attached
                  to a network.
                properties:
                  ipv4Pool:
                    description: References an IPv4Pool to acquire the IP Adress for
                      this DNS server from.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  ipv6Pool:
                    description: References an IPv6Pool to acquire the IP Adress for
                      this DNS server from.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  networkAttachmentDefinition:
                    description: References a NetworkAttachmentDefinition to attach
                      the DNSServer to a network.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                required:
                - networkAttachmentDefinition
                type: object
              recordSelector:
                description: Limits the delivered Zones and RecordSets.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
            required:
            - networkAttachment
            type: object
          status:
            description: DNSServerStatus defines the observed state of DNSServer
            properties:
              conditions:
                description: Conditions is a list of status conditions ths object
                  is in.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              ipv4Address:
                description: IPv4 Address the DHCP server is available at.
                type: string
              ipv6Address:
                description: IPv6 Address the DHCP server is available at.
                type: string
              observedGeneration:
                description: The most recent generation observed by the controller.
                format: int64
                type: integer
              phase:
                description: Human readable status aggregated from conditions.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
